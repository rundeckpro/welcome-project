version: '3'
services:
    rundeck:
        container_name: rundeck
        build:
          context: rundeck
          args:
            RUNDECK_IMAGE: ${RUNDECK_IMAGE:-rundeckpro/enterprise:SNAPSHOT}
        links:
          - mysql
        environment:
            RUNDECK_GRAILS_URL: http://localhost:4440
            RUNDECK_DATABASE_DRIVER: org.mariadb.jdbc.Driver
            RUNDECK_DATABASE_USERNAME: rundeck
            RUNDECK_DATABASE_PASSWORD: rundeck
            RUNDECK_DATABASE_URL: jdbc:mariadb://mysql/rundeck?autoReconnect=true&useSSL=false&allowPublicKeyRetrieval=true
            RUNDECK_SECURITY_DBLOGIN_ENABLED: 'true'
            RUNDECK_SECURITY_DBLOGIN_CREATEADMINUSERANDROLES: 'true'
            RUNDECK_SECURITY_DBLOGIN_ADMINUSERNAME: ${RUNDECK_USER:-admin}
            RUNDECK_SECURITY_DBLOGIN_ADMINPASSWORD: ${RUNDECK_PASSWORD:-admin}
            RUNDECK_PLUGIN_CLUSTER_REMOTEEXECUTION_ENABLED: 'false'
            RUNDECK_FEATURE_ENTERPRISEACL_ENABLED: 'false'
            RUNDECK_FEATURE_ENTERPRISEACLTRANSFER_ENABLED: 'false'
            RUNDECK_SERVER_ADDRESS: 0.0.0.0
            RUNDECK_GUI_STARTPAGE: jobs
            RUNDECK_LOGGING_STRATEGY: FILE
        ports:
          - 4440:4440
        volumes:
          - ${RUNDECK_LICENSE_FILE:-/dev/null}:/home/rundeck/etc/rundeckpro-license.key
    mysql:
      container_name: mysql
      image: mysql:8
      expose:
        - 3306
      cap_add:
        - SYS_NICE  # CAP_SYS_NICE reduces error messages in console
      environment:
        MYSQL_ROOT_PASSWORD: root
        MYSQL_DATABASE: rundeck
        MYSQL_USER: rundeck
        MYSQL_PASSWORD: rundeck
      volumes:
      - sql-datavolume:/var/lib/mysql
      ulimits:
        nofile:
          soft: 20000
          hard: 40000
      command: --max-connections=1000
    client:
      container_name: client
      image: rundeck/rundeck-cli
      # generate key for nodes
      command: bash -c "rm -rf $${KEY_PATH} && mkdir -p $${KEY_PATH} && ssh-keygen -q -t rsa  -N '' -f $${KEY_PATH}/id_rsa && ./scripts/init.sh"
      environment:
        CONFIG_FILE: /app/data/import.yml
        CONFIG_FILES_PATH: /app/data
        RUNDECK_URL: http://rundeck:4440
        RUNDECK_API_URL: http://rundeck:4440
        RUNDECK_USER: ${RUNDECK_USER:-admin}
        RUNDECK_PASSWORD: ${RUNDECK_PASSWORD:-admin}
        # generate key for nodes
        KEY_PATH: /app/data/keys

        # AZURE
        AZURE_API_KEY: ${AZURE_API_KEY}
        AZURE_TENANTID: ${AZURE_TENANTID}
        AZURE_SUBSCRIPTIONID: ${AZURE_SUBSCRIPTIONID}
        AZURE_CLIENTID: ${AZURE_CLIENTID}
        # GCP
        GCP_PROJECTID: ${GCP_PROJECTID}
        GCP_ZONE: ${GCP_ZONE}
        GCP_KEY_FILE: ${GCP_KEY_FILE}
        # AWS
        AWS_ACCESS_KEY: ${AWS_ACCESS_KEY}
        AWS_SECRET_KEY: ${AWS_SECRET_KEY}
        AWS_REGION: ${AWS_REGION}
        # ORACLE
        OCI_TENANTID: ${OCI_TENANTID}
        OCI_USERID: ${OCI_USERID}
        OCI_FINGERPRINT: ${OCI_FINGERPRINT}
        OCI_REGION: ${OCI_REGION}
      volumes:
        - ./data/rundeck:/app/data

    node:
      container_name: node1
      build:
        context: node-demo
      ports:
         - "22"
      environment:
        - SSHD_PORT=22
        - KEY_PATH=/data/keys
      volumes:
        - ./data/rundeck:/data/
    node2:
      container_name: node2
      build:
        context: node-demo
      ports:
         - "22"
      environment:
        - SSHD_PORT=22
        - KEY_PATH=/data/keys
      volumes:
        - ./data/rundeck:/data/

volumes:
  sql-datavolume:
